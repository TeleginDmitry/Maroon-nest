generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  name            String
  email           String            @unique
  password        String
  image           String
  recentlyProduct RecentlyProduct[]
}

model BlacklistToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
}

model Accordion {
  id        Int     @id @default(autoincrement())
  title     String
  body      String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Volume {
  id        Int     @id @default(autoincrement())
  amount    Int
  unit      String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id              Int               @id @default(autoincrement())
  image           String
  name            String
  title           String
  description     String
  accordion       Accordion[]
  volumes         Volume[]
  price           Int
  categories      Category[]
  recentlyProduct RecentlyProduct[]
}

model RecentlyProduct {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  filter    Filter?  @relation(fields: [filterId], references: [id])
  filterId  Int?
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model Filter {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  categories Category[]
}
